class: Workflow
cwlVersion: v1.0
id: >-
  vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/topmed-variant-calling-pipeline-cwl1/17
label: TOPMed Variant Calling Pipeline CWL1
inputs:
  - id: reference
    'sbg:fileTypes': FA
    type: File
    'sbg:x': -460
    'sbg:y': -266.8571472167969
  - id: bam_cram_file
    'sbg:fileTypes': 'BAM, CRAM'
    type: 'File[]'
    'sbg:x': -457.8571472167969
    'sbg:y': -143.42857360839844
  - id: bai_crai_file
    'sbg:fileTypes': 'BAI, CRAI'
    type: 'File[]'
    'sbg:x': -456.4285888671875
    'sbg:y': -17.285715103149414
  - id: reference_file
    'sbg:fileTypes': TGZ
    type: File
    'sbg:x': -119
    'sbg:y': -629.1428833007812
  - id: pedigree_file
    'sbg:fileTypes': PED
    type: File?
    'sbg:x': -119.71428680419922
    'sbg:y': -515.8571166992188
  - id: num_of_jobs
    type: int?
    'sbg:x': -121.57142639160156
    'sbg:y': -401.71429443359375
  - id: genotype_unit
    type: int
    'sbg:x': -127
    'sbg:y': -50.85714340209961
  - id: discover_unit
    type: int
    'sbg:x': -133
    'sbg:y': 73
  - id: chromosomes
    type: 'string[]'
    'sbg:x': -128.14285278320312
    'sbg:y': 198.2857208251953
  - id: reference_genome_1
    type:
      type: enum
      symbols:
        - hg38
        - GRCh37
      name: reference_genome
    'sbg:x': -459.2857360839844
    'sbg:y': -385.71429443359375
outputs:
  - id: called_variant_sites
    outputSource:
      - topmed_freeze3_calling/called_variant_sites
    type: File
    'sbg:x': 418.68548583984375
    'sbg:y': -43.3526725769043
  - id: genotypes
    outputSource:
      - topmed_freeze3_calling/genotypes
    type: File
    'sbg:x': 418.1114501953125
    'sbg:y': -197.72366333007812
  - id: makefile_log
    outputSource:
      - topmed_freeze3_calling/makefile_log
    type: File?
    'sbg:x': 423.53741455078125
    'sbg:y': -332.6839599609375
  - id: vcf_output
    outputSource:
      - topmed_freeze3_calling/vcf_output
    'sbg:fileTypes': GZ
    type: 'File[]?'
    'sbg:y': -622.8525390625
    'sbg:x': 421.19287109375
  - id: vcf_index_output
    outputSource:
      - topmed_freeze3_calling/vcf_index_output
    'sbg:fileTypes': TBI
    type: 'File[]?'
    'sbg:y': -474.9278869628906
    'sbg:x': 424.314697265625
steps:
  - id: verifybamid_cwl1
    in:
      - id: bai_crai_file
        source:
          - bai_crai_file
      - id: bam_cram_file
        source:
          - bam_cram_file
      - id: reference
        source:
          - reference
      - id: reference_genome
        source:
          - reference_genome_1
    out:
      - id: output_index_file
    run:
      class: CommandLineTool
      cwlVersion: v1.0
      id: >-
        vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/verifybamid_cwl1/7
      baseCommand: []
      inputs:
        - 'sbg:category': Input Files
          format: 'BAI,CRAI'
          id: bai_crai_file
          type: 'File[]'
          label: BAI/CRAI File
          doc: Index file for BAM/CRAM
          'sbg:fileTypes': 'BAI, CRAI'
        - 'sbg:category': Input Files
          format: 'BAM,CRAM'
          id: bam_cram_file
          type: File
          label: BAM/CRAM File
          doc: Bam or Cram file for the sample
          'sbg:fileTypes': 'BAM, CRAM'
        - format: FA
          'sbg:category': Input Files
          id: reference
          type: File
          inputBinding:
            position: 1
            shellQuote: false
            valueFrom: |-
              ${

                  return ""

              }
          label: Reference
          doc: Reference file
          'sbg:fileTypes': FA
          secondaryFiles:
            - .fai
        - 'sbg:category': Input file
          id: reference_genome
          type:
            type: enum
            symbols:
              - hg38
              - GRCh37
            name: reference_genome
          label: Reference genome
      outputs:
        - id: output_index_file
          doc: Output for topmed freeze3 pipeline
          label: Output Index File
          type: File?
          outputBinding:
            glob: |-
              ${
                  return inputs.bam_cram_file.path.split("/").pop().split(".").shift() + ".index"

              }
          format: INDEX
      label: VerifyBamID_CWL1
      arguments:
        - position: 0
          prefix: ''
          separate: false
          shellQuote: false
          valueFrom: |-
            ${
                if (inputs.reference_genome == 'GRCh37') {
                    var UDPath = "/VerifyBamID/resource/1000g.phase3.100k.b37.vcf.gz.dat.UD"
                    var BedPath = "/VerifyBamID/resource/1000g.phase3.100k.b37.vcf.gz.dat.bed"
                    var MeanPath = "/VerifyBamID/resource/1000g.phase3.100k.b37.vcf.gz.dat.mu"
                } else if (inputs.reference_genome == 'hg38') {
                    var UDPath = "/VerifyBamID/resource/1000g.phase3.100k.b38.vcf.gz.dat.UD"
                    var BedPath = "/VerifyBamID/resource/1000g.phase3.100k.b38.vcf.gz.dat.bed"
                    var MeanPath = "/VerifyBamID/resource/1000g.phase3.100k.b38.vcf.gz.dat.mu"
                }

                var comm = "export PATH=$PATH:/VerifyBamID/bin/ && VerifyBamID \
             --UDPath " + UDPath + " \
             --BedPath " + BedPath + " \
             --MeanPath " + MeanPath + " \
             --Reference " + inputs.reference.path + " --BamFile " + inputs.bam_cram_file.path
                comm += " && python make_index.py --file "
                comm += inputs.bam_cram_file.path.split("/").pop().split(".").shift()
                comm += " --path " + inputs.bam_cram_file.path + " --result result.out"

                return comm
            }
      requirements:
        - class: ShellCommandRequirement
        - class: ResourceRequirement
          ramMin: 1000
          coresMin: 1
        - class: DockerRequirement
          dockerPull: 'images.sbgenomics.com/vladimir_obucina/topmed:VerifyBamID'
        - class: InitialWorkDirRequirement
          listing:
            - entryname: make_index.py
              entry: >-
                import sys

                import glob, os

                import argparse


                parser = argparse.ArgumentParser()



                parser.add_argument("--file", help="File name.", type=str)

                parser.add_argument("--path", help="Path to file.", type=str)

                parser.add_argument("--result", help="Result from ", type=str)


                args = parser.parse_args()


                with open(args.result, 'rt') as in_file:
                    contents = in_file.read()
                    broj = contents.split("Alpha:",4)
                    contamination = broj[1].rstrip()



                output_file = args.file + ".index"

                f = open (output_file, "w+")


                f.write(args.file + '\t' + args.path + '\t' + contamination +
                '\n')


                f.close()
        - class: InlineJavascriptRequirement
          expressionLib:
            - |-
              var updateMetadata = function(file, key, value) {
                  file['metadata'][key] = value;
                  return file;
              };


              var setMetadata = function(file, metadata) {
                  if (!('metadata' in file))
                      file['metadata'] = metadata;
                  else {
                      for (var key in metadata) {
                          file['metadata'][key] = metadata[key];
                      }
                  }
                  return file
              };

              var inheritMetadata = function(o1, o2) {
                  var commonMetadata = {};
                  if (!Array.isArray(o2)) {
                      o2 = [o2]
                  }
                  for (var i = 0; i < o2.length; i++) {
                      var example = o2[i]['metadata'];
                      for (var key in example) {
                          if (i == 0)
                              commonMetadata[key] = example[key];
                          else {
                              if (!(commonMetadata[key] == example[key])) {
                                  delete commonMetadata[key]
                              }
                          }
                      }
                  }
                  if (!Array.isArray(o1)) {
                      o1 = setMetadata(o1, commonMetadata)
                  } else {
                      for (var i = 0; i < o1.length; i++) {
                          o1[i] = setMetadata(o1[i], commonMetadata)
                      }
                  }
                  return o1;
              };

              var toArray = function(file) {
                  return [].concat(file);
              };

              var groupBy = function(files, key) {
                  var groupedFiles = [];
                  var tempDict = {};
                  for (var i = 0; i < files.length; i++) {
                      var value = files[i]['metadata'][key];
                      if (value in tempDict)
                          tempDict[value].push(files[i]);
                      else tempDict[value] = [files[i]];
                  }
                  for (var key in tempDict) {
                      groupedFiles.push(tempDict[key]);
                  }
                  return groupedFiles;
              };

              var orderBy = function(files, key, order) {
                  var compareFunction = function(a, b) {
                      if (a['metadata'][key].constructor === Number) {
                          return a['metadata'][key] - b['metadata'][key];
                      } else {
                          var nameA = a['metadata'][key].toUpperCase();
                          var nameB = b['metadata'][key].toUpperCase();
                          if (nameA < nameB) {
                              return -1;
                          }
                          if (nameA > nameB) {
                              return 1;
                          }
                          return 0;
                      }
                  };

                  files = files.sort(compareFunction);
                  if (order == undefined || order == "asc")
                      return files;
                  else
                      return files.reverse();
              };
      'sbg:publisher': sbg
      'sbg:revisionNotes': 'UPDATE: GRCh37 instead of hg19'
      'sbg:image_url': >-
        https://igor.sbgenomics.com/ns/brood/images/vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/verifybamid_cwl1/7.png
      'sbg:cmdPreview': >-
        export PATH=$PATH:/VerifyBamID/bin/ && VerifyBamID  --UDPath
        /VerifyBamID/resource/1000g.phase3.100k.b37.vcf.gz.dat.UD  --BedPath
        /VerifyBamID/resource/1000g.phase3.100k.b37.vcf.gz.dat.bed  --MeanPath
        /VerifyBamID/resource/1000g.phase3.100k.b37.vcf.gz.dat.mu  --Reference
        /path/to/reference.ext --BamFile /path/to/bam_file.ext && python
        make_index.py --file bam_file --path
        /root/topmed_freeze3_calling/bam_file.ext --result result.out
      $namespaces:
        sbg: 'https://sevenbridges.com'
      'sbg:appVersion':
        - v1.0
      'sbg:sbgMaintained': false
      'sbg:contributors':
        - vladimir_obucina
      'sbg:revision': 7
      'sbg:revisionsInfo':
        - 'sbg:revision': 0
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1526995337
          'sbg:revisionNotes': null
        - 'sbg:revision': 1
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1526995452
          'sbg:revisionNotes': First version
        - 'sbg:revision': 2
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1526995574
          'sbg:revisionNotes': >-
            After conversion there weren't fyle types in the input ports. Added
            it
        - 'sbg:revision': 3
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1526996077
          'sbg:revisionNotes': ''
        - 'sbg:revision': 4
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1527013794
          'sbg:revisionNotes': Removed /topmed_freeze3/   from path in middle column
        - 'sbg:revision': 5
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1527069678
          'sbg:revisionNotes': ''
        - 'sbg:revision': 6
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1527071592
          'sbg:revisionNotes': >-
            UPDATE: changed generating index file, \n was missing at the end of
            file.
        - 'sbg:revision': 7
          'sbg:modifiedBy': vladimir_obucina
          'sbg:modifiedOn': 1527500604
          'sbg:revisionNotes': 'UPDATE: GRCh37 instead of hg19'
      'sbg:latestRevision': 7
      'sbg:createdOn': 1526995337
      'sbg:projectName': TOPMed Freeze 3a Variant Calling Pipeline
      'sbg:project': vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline
      'sbg:modifiedBy': vladimir_obucina
      'sbg:validationErrors': []
      'sbg:modifiedOn': 1527500604
      'sbg:createdBy': vladimir_obucina
      'sbg:id': >-
        vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/verifybamid_cwl1/7
    label: VerifyBamID_CWL1
    scatter:
      - bam_cram_file
    'sbg:y': -197.14285278320312
    'sbg:x': -233.57144165039062
  - id: topmed_freeze3_calling
    in:
      - id: bai_crai_files
        source:
          - bai_crai_file
      - id: bam_cram_files
        source:
          - bam_cram_file
      - id: chromosomes
        default: []
        source:
          - chromosomes
      - id: discover_unit
        source:
          - discover_unit
      - id: genotype_unit
        source:
          - genotype_unit
      - id: index_files
        source:
          - verifybamid_cwl1/output_index_file
      - id: num_of_jobs
        source:
          - num_of_jobs
      - id: pedigree_file
        source:
          - pedigree_file
      - id: reference_file
        source:
          - reference_file
      - id: reference_genome
        source:
          - reference_genome_1
    out:
      - id: called_variant_sites
      - id: genotypes
      - id: makefile_log
      - id: vcf_output
      - id: vcf_index_output
    run:
      class: CommandLineTool
      cwlVersion: v1.0
      id: >-
        vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/topmed_freeze3_calling/25
      baseCommand: []
      inputs:
        - format: 'BAI,CRAI'
          id: bai_crai_files
          type: 'File[]'
          label: BAI/CRAI files
          'sbg:fileTypes': 'BAI, CRAI'
        - format: 'BAM, CRAM'
          id: bam_cram_files
          type: 'File[]'
          inputBinding:
            position: 1
            shellQuote: false
            valueFrom: |-
              ${
                  return ''
              }
          label: BAM/CRAM Files
          'sbg:fileTypes': 'BAM, CRAM'
        - id: chromosomes
          type: 'string[]'
          label: Chromosome
        - 'sbg:category': Input parameter
          id: discover_unit
          type: int
          label: DiscoverUnit
        - 'sbg:category': Input parameter
          id: genotype_unit
          type: int
          label: GenotypeUnit
        - format: INDEX
          'sbg:category': Input Files
          id: index_files
          type: 'File[]?'
          label: Index files
          doc: Index files with contamination values
          'sbg:fileTypes': INDEX
        - 'sbg:toolDefaultValue': '4'
          id: num_of_jobs
          type: int?
          label: Number of jobs
        - format: PED
          'sbg:category': Input Files
          id: pedigree_file
          type: File?
          label: Pedigree File
          'sbg:fileTypes': PED
        - format: TGZ
          'sbg:category': Input Files
          id: reference_file
          type: File
          label: Reference File
          doc: Reference genome
          'sbg:fileTypes': TGZ
        - 'sbg:category': Input file
          id: reference_genome
          type:
            type: enum
            symbols:
              - hg38
              - GRCh37
            name: reference_genome
          label: Reference genome
      outputs:
        - id: called_variant_sites
          label: Called variant sites
          type: File
          outputBinding:
            glob: called_variant_sites.tar.gz
        - id: genotypes
          label: Genotypes
          type: File
          outputBinding:
            glob: genotypes.tar.gz
        - id: makefile_log
          doc: Log when running make files
          type: File?
          outputBinding:
            glob: makefile.log
          format: LOG
        - id: vcf_output
          doc: Output VCF file
          label: Output VCF file
          type: 'File[]?'
          outputBinding:
            glob: '*vcf.gz'
          'sbg:fileTypes': GZ
        - id: vcf_index_output
          doc: VCF index output file
          label: Output Index
          type: 'File[]?'
          outputBinding:
            glob: '*.tbi'
          'sbg:fileTypes': TBI
      label: Topmed_freeze3_CWL1
      arguments:
        - position: 0
          prefix: ''
          separate: false
          shellQuote: false
          valueFrom: |-
            ${

                if (inputs.reference_genome == 'GRCh37') {
                    var chr = inputs.chromosomes.join(' ')
                } else if (inputs.reference_genome == 'hg38'){
                    for (var i = 0; i < inputs.chromosomes.length; i++) {
                        inputs.chromosomes[i] = "chr" + inputs.chromosomes[i];
                    }
                    var chr = inputs.chromosomes.join(' ')
                }
                var comm = "cat "

                for (var i = 0; i < inputs.index_files.length; i++) {
                    comm += inputs.index_files[i].path + " ";
                }
                comm += "> trio_data.index && "
                /*
                for (var i = 0; i < inputs.bam_cram_files.length; i++) {
                    comm += " ln -sf " + inputs.bam_cram_files[i].path + " /root/topmed_freeze3_calling/" + inputs.bam_cram_files[i].path.split("/").pop() + " && ";
                }
                for (var i = 0; i < inputs.bai_crai_files.length; i++) {
                    comm += " ln -sf " + inputs.bai_crai_files[i].path + " /root/topmed_freeze3_calling/" + inputs.bai_crai_files[i].path.split("/").pop() + " && ";
                }
                */

                comm += "python /root/topmed_freeze3_calling/scripts/append_gcconfig.py -du " + inputs.discover_unit + " -gu " + inputs.genotype_unit + " -gen " + inputs.reference_genome
                if (inputs.pedigree_file != null) {
                  comm += " && cp " + inputs.pedigree_file.path + " /root/topmed_freeze3_calling/data/"
                }
                  
                comm += " && cp trio_data.index /root/topmed_freeze3_calling/data/"
                comm += " &&  cwd=\"$PWD\"  && cd /root/topmed_freeze3_calling/"
                comm += " && tar -xzvf " + inputs.reference_file.path + " -C /root/topmed_freeze3_calling/"

                // Step1
                comm += " && perl scripts/step1-detect-and-merge-variants.pl " + chr
                comm += " && sed -i '1s/^/SHELL:=\\/bin\\/bash\\n/' out/aux/Makefile"
                comm += " && make -f out/aux/Makefile"
                if (inputs.num_of_jobs) {
                    comm += " -j " + inputs.num_of_jobs
                }
                comm += " >> makefile.log"

                // Step2
                comm += " && perl scripts/step2-joint-genotyping.pl " + chr
                comm += " && make -f out/paste/*.Makefile"
                if (inputs.num_of_jobs) {
                    comm += " -j " + inputs.num_of_jobs
                }
                comm += " >> makefile.log"
                if (inputs.pedigree_file) {
                    // Step3a
                    comm += " && perl scripts/step3a-compute-milk-score.pl " + chr
                    comm += " && make -f out/aux/milk/*.Makefile"
                    if (inputs.num_of_jobs) {
                        comm += " -j " + inputs.num_of_jobs
                    }
                    comm += " >> makefile.log"
                    // Step3b
                    comm += " && perl scripts/step3b-run-svm-milk-filter.pl " + chr
                    comm += " >> makefile.log"
                }
                
                comm += " && cd out"
                comm += " && tar -zcvf genotypes.tar.gz paste"
                if (inputs.pedigree_file) {
                    comm += " && tar -zcvf called_variant_sites.tar.gz svm"
                    comm += " && mv called_variant_sites.tar.gz \"$cwd\""
                }
                comm += " && mv ../makefile.log genotypes.tar.gz paste/*vcf.gz paste/*.tbi \"$cwd\""
                //comm += " && mv ../makefile.log paste/*vcf.gz paste/*.tbi \"$cwd\""
                return comm
            }
      requirements:
        - class: ShellCommandRequirement
        - class: ResourceRequirement
          ramMin: 8000
          coresMin: 8
        - class: DockerRequirement
          dockerPull: 'images.sbgenomics.com/vladimir_obucina/topmed:freeze3a'
        - class: InitialWorkDirRequirement
          listing:
            - entryname: gcconfig.pm
              entry: >+
                package gcconfig;


                use base qw/Exporter/;

                use Cwd qw(realpath);

                use File::Basename qw(dirname);

                use POSIX qw(pow sqrt);

                use FindBin;


                ## Variables and methods shared across the package

                our @EXPORT = qw($ref $md5 $bgzip $samtools $bcftools $bamUtil
                $tabix $index $pedf $out $vt $discoverUnit $genotypeUnit
                $omnivcf $hapmapvcf $dbsnp $invNorm $svmlearn $svmclassify
                $vcfsummary $vcfsummary2);


                ############################################################

                ### MODIFY THESE VARIABLES TO YOUR COMPUTING ENVIRONMENT

                our $index = "data/trio_data.index";

                our $pedf = "data/trio_data.ped";

                our $out = "out";

                ############################################################

                ### MODIFY THESE VARIABLES TO IF REFERENCE IS LOCATED ELSEWHERE

                our $refDir = "$FindBin::Bin/../gotcloud.ref";

                ############################################################

                ### MODIFY THESE VARIABLES TO IF EXTERNAL BINARIES ARE USED

                our $bgzip = "$FindBin::Bin/../htslib/bgzip";

                our $tabix = "$FindBin::Bin/../htslib/tabix";

                our $vt = "$FindBin::Bin/../vt/vt";

                our $samtools = "$FindBin::Bin/../samtools/samtools";

                our $bcftools = "$FindBin::Bin/../bcftools/bcftools";

                our $bamUtil = "$FindBin::Bin/../gotcloud/src/bin/bamUtil";

                our $svmlearn = "$FindBin::Bin/../gotcloud/src/bin/svm-train";

                our $svmclassify =
                "$FindBin::Bin/../gotcloud/src/bin/svm-predict";

                our $invNorm = "$FindBin::Bin/../gotcloud/src/bin/invNorm";

                our $vcfsummary = "$FindBin::Bin/vcf-summary";

                our $vcfsummary2 = "$FindBin::Bin/vcf-summary-v2";

            - entryname: append_gcconfig.py
              entry: >-
                import argparse



                parser = argparse.ArgumentParser()

                parser.add_argument("--discover_unit", "-du", help="discover
                unit size", type=str)

                parser.add_argument("--genotype_unit", "-gu", help="genotype
                unit size", type=str)

                parser.add_argument("--genome", "-gen", help="genome used",
                type=str)

                args = parser.parse_args()


                discover_unit = args.discover_unit

                genotype_unit = args.genotype_unit

                genome = args.genome


                f = open("/root/topmed_freeze3_calling/scripts/gcconfig.pm",
                "a")

                f.write("\n")

                if genome == "GRCh37":
                    f.write("our $md5 = \"$refDir/md5/%2s/%2s/%s\";\n")
                    f.write("our $ref = \"$refDir/hs37d5.fa\";\n")
                    f.write("our $dbsnp = \"$refDir/dbsnp_142.b37.vcf.gz\";\n")
                    f.write("our $hapmapvcf = \"$refDir/hapmap_3.3.b37.sites.vcf.gz\";\n")
                    f.write("our $omnivcf = \"$refDir/1000G_omni2.5.b37.sites.PASS.vcf.gz\";\n")
                elif genome == "hg38":
                    f.write("our $md5 = \"$refDir/md5/%2s/%2s/%s\";\n")
                    f.write("our $ref = \"$refDir/hs38DH.fa\";\n")
                    f.write("our $dbsnp = \"$refDir/dbsnp_142.b38.vcf.gz\";\n")
                    f.write("our $hapmapvcf = \"$refDir/hapmap_3.3.b38.sites.vcf.gz\";\n")
                    f.write("our $omnivcf = \"$refDir/1000G_omni2.5.b38.sites.PASS.vcf.gz\";\n")

                f.write("our $discoverUnit = " + discover_unit + ";\n")

                f.write("our $genotypeUnit = " + genotype_unit + ";\n1;")


                f.close()
        - class: InlineJavascriptRequirement
          expressionLib:
            - |-
              var updateMetadata = function(file, key, value) {
                  file['metadata'][key] = value;
                  return file;
              };


              var setMetadata = function(file, metadata) {
                  if (!('metadata' in file))
                      file['metadata'] = metadata;
                  else {
                      for (var key in metadata) {
                          file['metadata'][key] = metadata[key];
                      }
                  }
                  return file
              };

              var inheritMetadata = function(o1, o2) {
                  var commonMetadata = {};
                  if (!Array.isArray(o2)) {
                      o2 = [o2]
                  }
                  for (var i = 0; i < o2.length; i++) {
                      var example = o2[i]['metadata'];
                      for (var key in example) {
                          if (i == 0)
                              commonMetadata[key] = example[key];
                          else {
                              if (!(commonMetadata[key] == example[key])) {
                                  delete commonMetadata[key]
                              }
                          }
                      }
                  }
                  if (!Array.isArray(o1)) {
                      o1 = setMetadata(o1, commonMetadata)
                  } else {
                      for (var i = 0; i < o1.length; i++) {
                          o1[i] = setMetadata(o1[i], commonMetadata)
                      }
                  }
                  return o1;
              };

              var toArray = function(file) {
                  return [].concat(file);
              };

              var groupBy = function(files, key) {
                  var groupedFiles = [];
                  var tempDict = {};
                  for (var i = 0; i < files.length; i++) {
                      var value = files[i]['metadata'][key];
                      if (value in tempDict)
                          tempDict[value].push(files[i]);
                      else tempDict[value] = [files[i]];
                  }
                  for (var key in tempDict) {
                      groupedFiles.push(tempDict[key]);
                  }
                  return groupedFiles;
              };

              var orderBy = function(files, key, order) {
                  var compareFunction = function(a, b) {
                      if (a['metadata'][key].constructor === Number) {
                          return a['metadata'][key] - b['metadata'][key];
                      } else {
                          var nameA = a['metadata'][key].toUpperCase();
                          var nameB = b['metadata'][key].toUpperCase();
                          if (nameA < nameB) {
                              return -1;
                          }
                          if (nameA > nameB) {
                              return 1;
                          }
                          return 0;
                      }
                  };

                  files = files.sort(compareFunction);
                  if (order == undefined || order == "asc")
                      return files;
                  else
                      return files.reverse();
              };
      hints:
        - class: 'sbg:useSbgFS'
          value: 'true'
      'sbg:publisher': sbg
      'sbg:modifiedOn': 1530630624
      'sbg:cmdPreview': >-
        cat /path/to/index_files-1.ext /path/to/index_files-2.ext >
        trio_data.index && ln -sf /path/to/bam_cram_files-1.ext
        /root/topmed_freeze3_calling/bam_cram_files-1.ext &&  ln -sf
        /path/to/bam_cram_files-2.ext
        /root/topmed_freeze3_calling/bam_cram_files-2.ext &&  ln -sf
        /path/to/bai_crai_files-1.ext
        /root/topmed_freeze3_calling/bai_crai_files-1.ext &&  ln -sf
        /path/to/bai_crai_files-1.ext
        /root/topmed_freeze3_calling/bai_crai_files-1.ext && python
        /root/topmed_freeze3_calling/scripts/append_gcconfig.py -du 4 -gu 7 -gen
        hg38 && cp trio_data.index /path/to/PedigreeFile.ext
        /root/topmed_freeze3_calling/data/ &&  cwd="$PWD"  && cd
        /root/topmed_freeze3_calling/ && tar -xzvf /path/to/ReferenceFile.ext -C
        /root/topmed_freeze3_calling/ && perl
        scripts/step1-detect-and-merge-variants.pl chrchromosome-string-value-1
        chrchromosome-string-value-2 && sed -i '1s/^/SHELL:=\/bin\/bash\n/'
        out/aux/Makefile && make -f out/aux/Makefile >> makefile.log && perl
        scripts/step2-joint-genotyping.pl chrchromosome-string-value-1
        chrchromosome-string-value-2 && make -f out/paste/*.Makefile >>
        makefile.log && perl scripts/step3a-compute-milk-score.pl
        chrchromosome-string-value-1 chrchromosome-string-value-2 && make -f
        out/aux/milk/*.Makefile >> makefile.log && perl
        scripts/step3b-run-svm-milk-filter.pl chrchromosome-string-value-1
        chrchromosome-string-value-2 >> makefile.log && cd out && tar -zcvf
        genotypes.tar.gz paste && tar -zcvf called_variant_sites.tar.gz svm &&
        mv ../makefile.log genotypes.tar.gz called_variant_sites.tar.gz "$cwd"
      'sbg:contributors':
        - mikojicic
        - vladimir_obucina
      'sbg:appVersion':
        - v1.0
      'sbg:sbgMaintained': false
      $namespaces:
        sbg: 'https://sevenbridges.com'
      'sbg:revision': 25
      'sbg:revisionsInfo':
        - 'sbg:revision': 0
          'sbg:modifiedOn': 1525956103
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': null
        - 'sbg:revision': 1
          'sbg:modifiedOn': 1525956286
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': init
        - 'sbg:revision': 2
          'sbg:modifiedOn': 1525956409
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': name changed
        - 'sbg:revision': 3
          'sbg:modifiedOn': 1525957728
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': rev 71
        - 'sbg:revision': 4
          'sbg:modifiedOn': 1525957765
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': delete input
        - 'sbg:revision': 5
          'sbg:modifiedOn': 1525959177
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': javascript save
        - 'sbg:revision': 6
          'sbg:modifiedOn': 1525962377
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': use sbgfs
        - 'sbg:revision': 7
          'sbg:modifiedOn': 1525963786
          'sbg:modifiedBy': mikojicic
          'sbg:revisionNotes': default number of jobs fixed
        - 'sbg:revision': 8
          'sbg:modifiedOn': 1526053632
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': Removed file requirements
        - 'sbg:revision': 9
          'sbg:modifiedOn': 1526995956
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': Draft2 revision 98
        - 'sbg:revision': 10
          'sbg:modifiedOn': 1526996080
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 11
          'sbg:modifiedOn': 1527013723
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': Removed making symlinks
        - 'sbg:revision': 12
          'sbg:modifiedOn': 1527068264
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': Added append_gcconfig.py script to create files
        - 'sbg:revision': 13
          'sbg:modifiedOn': 1527069675
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 14
          'sbg:modifiedOn': 1527085513
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': Removed Index file from outputs.
        - 'sbg:revision': 15
          'sbg:modifiedOn': 1527500690
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': 'UPDATE: GRCh37 insted of hg19'
        - 'sbg:revision': 16
          'sbg:modifiedOn': 1527503975
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': 'UPDATE: changed append_gcconfig.py script to recognize GRCh37'
        - 'sbg:revision': 17
          'sbg:modifiedOn': 1529858460
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': 'UPDATE: Added vcf and vcf_index output.'
        - 'sbg:revision': 18
          'sbg:modifiedOn': 1529872391
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 19
          'sbg:modifiedOn': 1530622544
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': 'UPDATE: Removed PED file as mandatory (not running steps 3a and 3b)'
        - 'sbg:revision': 20
          'sbg:modifiedOn': 1530626397
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': Fixed bug with file requirements of pedigree file
        - 'sbg:revision': 21
          'sbg:modifiedOn': 1530626919
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 22
          'sbg:modifiedOn': 1530627291
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 23
          'sbg:modifiedOn': 1530627554
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 24
          'sbg:modifiedOn': 1530628150
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
        - 'sbg:revision': 25
          'sbg:modifiedOn': 1530630624
          'sbg:modifiedBy': vladimir_obucina
          'sbg:revisionNotes': ''
      'sbg:latestRevision': 25
      'sbg:createdOn': 1525956103
      'sbg:projectName': TOPMed Freeze 3a Variant Calling Pipeline
      'sbg:project': vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline
      'sbg:modifiedBy': vladimir_obucina
      'sbg:validationErrors': []
      'sbg:image_url': >-
        https://igor.sbgenomics.com/ns/brood/images/vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/topmed_freeze3_calling/25.png
      'sbg:revisionNotes': ''
      'sbg:createdBy': mikojicic
      'sbg:id': >-
        vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/topmed_freeze3_calling/25
    label: Topmed_freeze3_CWL1
    'sbg:y': -198
    'sbg:x': 157.14285278320312
requirements:
  - class: ScatterFeatureRequirement
'sbg:publisher': sbg
'sbg:modifiedOn': 1530632680
'sbg:sbgMaintained': false
'sbg:contributors':
  - vladimir_obucina
'sbg:appVersion':
  - v1.0
$namespaces:
  sbg: 'https://sevenbridges.com'
'sbg:revision': 17
'sbg:revisionsInfo':
  - 'sbg:revision': 0
    'sbg:modifiedOn': 1526996458
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': null
  - 'sbg:revision': 1
    'sbg:modifiedOn': 1526996882
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'Firste Version with CWL1 tools, scatter on VerifyBAMId is of type none'
  - 'sbg:revision': 2
    'sbg:modifiedOn': 1526997137
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': Exposed ports
  - 'sbg:revision': 3
    'sbg:modifiedOn': 1526997206
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': ''
  - 'sbg:revision': 4
    'sbg:modifiedOn': 1526997265
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': ''
  - 'sbg:revision': 5
    'sbg:modifiedOn': 1527001305
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': Separated bam and bai inputs for VerifyBAMId and Topmed_freeze3
  - 'sbg:revision': 6
    'sbg:modifiedOn': 1527007399
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': Added output to VerifyBamID
  - 'sbg:revision': 7
    'sbg:modifiedOn': 1527060490
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'UPDATE: Removed symlinks'
  - 'sbg:revision': 8
    'sbg:modifiedOn': 1527060551
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': ''
  - 'sbg:revision': 9
    'sbg:modifiedOn': 1527071783
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': >-
      UPDATE: changed VerifyBamID, error was lack od \n sign at the end of each
      output index file.
  - 'sbg:revision': 10
    'sbg:modifiedOn': 1527085565
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': Removed index file from output
  - 'sbg:revision': 11
    'sbg:modifiedOn': 1527500740
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'UPDATE: GRCh37 insted of hg19'
  - 'sbg:revision': 12
    'sbg:modifiedOn': 1527503995
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'UPDATE: changed append_gcconfig.py script to recognize GRCh37'
  - 'sbg:revision': 13
    'sbg:modifiedOn': 1529918908
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'UPDATE: Added vcf and vcf_index outputs'
  - 'sbg:revision': 14
    'sbg:modifiedOn': 1530622626
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'UPDATE: Removed PED file as mandatory (not running steps 3a and 3b)'
  - 'sbg:revision': 15
    'sbg:modifiedOn': 1530622728
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': ''
  - 'sbg:revision': 16
    'sbg:modifiedOn': 1530626434
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': Fixed bug with file requirements of pedigree file
  - 'sbg:revision': 17
    'sbg:modifiedOn': 1530632680
    'sbg:modifiedBy': vladimir_obucina
    'sbg:revisionNotes': 'UPDATE: Changed variant calling so pedigree file is not mandatory anymore'
'sbg:latestRevision': 17
'sbg:createdOn': 1526996458
'sbg:projectName': TOPMed Freeze 3a Variant Calling Pipeline
'sbg:createdBy': vladimir_obucina
'sbg:image_url': >-
  https://igor.sbgenomics.com/ns/brood/images/vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/topmed-variant-calling-pipeline-cwl1/17.png
'sbg:modifiedBy': vladimir_obucina
'sbg:validationErrors': []
'sbg:revisionNotes': 'UPDATE: Changed variant calling so pedigree file is not mandatory anymore'
'sbg:id': >-
  vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline/topmed-variant-calling-pipeline-cwl1/17
'sbg:project': vladimir_obucina/topmed-freeze-3a-variant-calling-pipeline
